/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	var copy=__webpack_require__(1);
	var Date=__webpack_require__(2);
	var typeOf=__webpack_require__(3);

	;(function(window,document,undfeined){
	    var _i={
	        //字符串处理


	        //数组处理


	        //日期处理
	        Date:Date,

	        // 对象处理


	        //其它
	        copy:copy,
	        typeOf:typeOf

	    }
	    window._i=_i;
	})(window,document)

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	/**
	 * copy
	 * @param {*} data type:[]/{}
	 * @param {*} boolean type:boolean,默认false,true(深度copy)
	 */

	var copy= function (data,boolean) {
	    var t = Object.prototype.toString.call(data).replace(/\[object\s|\]/g,'');
	    var o;
	    var boolean=boolean||false;

	    if (t === 'array') {
	        o = [];
	        if(!boolean){
	            for (var i = 0; i < data.length; i++) {
	                o.push(data[i]);
	            }
	        }else{
	            for (var i = 0; i < data.length; i++) {
	                o.push(copy(data[i]));
	            }
	        }
	    } else if ( t === 'object') {
	         o = {};
	         if(!boolean){
	            for (var j in data) {
	                o[j] = data[j];
	            }
	         }else{
	            for (var j in data) {
	                o[j] = copy(data[j]);
	            }
	         }
	    }else{
	        return data;
	    }
	    return o;
	}

	module.exports=copy

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	/**
	 * 格式化日期
	 * @param {* 原始值的时间} date 
	 * @param {*yyyy-MM-dd/C hh:mm:ss} format 默认：'yyyy-MM-dd',C表示格式化为：今天/昨天/更久
	 */

	var date = function (date, format) {
	    if (!date) return;
	    var fmt = format ? format : 'yyyy-MM-dd';
	    var date = new Date(date);
	    var time = {
	        y: date.getFullYear(),
	        M: date.getMonth() + 1,
	        d: date.getDate(),
	        h: date.getHours(),
	        m: date.getMinutes(),
	        s: date.getSeconds()
	    }
	    //格式化：今天/昨天/更久
	    fmt = fmt.replace(/C/g, function (v) {
	        var c = '更久';
	        if ((v.length > 0) && (time.y == new Date().getFullYear()) && (time.M == new Date().getMonth() + 1)) {
	            if (time.d == new Date().getDate()) {
	                c = '今天'
	            } else if (time.d == new Date().getDate() - 1) {
	                c = '昨天'
	            }
	        }
	        return c;
	    })
	    // 格式化
	    fmt = fmt.replace(/M+|d+|h+|m+|s+/g, function (v) {
	        return ((v.length > 1 ? '0' : '') + time[v.slice(-1)]).slice(-2);
	    });
	    // 格式化年
	    fmt = fmt.replace(/y+/g, function (v) {
	        return time.y.toString().slice(-(v.length))
	    });
	    fmt = fmt.replace(/C/g, function (v) {
	        var c = '更久';
	        if ((y == new Date().getFullYear()) && (M = new Date().getMonth() + 1)) {
	            if (d == new Date().getDate()) {
	                c = '今天'
	            } else if (d == new Date().getDate() - 1) {
	                c = '昨天'
	            }
	        }
	        return c;
	    })
	    return fmt
	}

	module.exports = date;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	/**
	 * 精确判断数据的类型
	 * @param {*任何类型} obj  
	 */
	var typeOf= function (obj) {
	    const toString = Object.prototype.toString;
	    const map = {
	        '[object Boolean]'  : 'boolean',
	        '[object Number]'   : 'number',
	        '[object String]'   : 'string',
	        '[object Function]' : 'function',
	        '[object Array]'    : 'array',
	        '[object Date]'     : 'date',
	        '[object RegExp]'   : 'regExp',
	        '[object Undefined]': 'undefined',
	        '[object Null]'     : 'null',
	        '[object Object]'   : 'object'
	    };
	    return map[toString.call(obj)];
	}

	module.exports=typeOf

/***/ })
/******/ ]);